package Vista;

import Datos.Caja;
import Datos.Modelo_Tabla_CuentCorriente;
import Datos.ReciboSaniamiento;
import Datos.Vivienda;
import Negocio.CajaBo;
import Negocio.MorososBo;
import Negocio.ReciboSaniamientoBo;
import java.awt.Dimension;
import java.awt.Font;
import java.beans.PropertyVetoException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class frmCaja extends javax.swing.JInternalFrame {

    private Modelo_Tabla_CuentCorriente MTCC = new Modelo_Tabla_CuentCorriente();
    private DefaultTableModel detallePredio;
    private double montoPagar = 0;
    private ArrayList<ReciboSaniamiento> ltsCuentaCorriente = new ArrayList();
    private ArrayList<ReciboSaniamiento> ltsReciboPago = new ArrayList();
    private ReciboSaniamiento objRS = null;

    public static Vivienda objV = null;

    /**
     * Creates new form frmCaja
     */
    public frmCaja() {
        initComponents();
        this.botones();
        this.activarControles(false);
        this.definir_tama√±o_columna();
        this.cargarTablaPago();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnTicket = new javax.swing.JRadioButton();
        btnContribuyente = new javax.swing.JRadioButton();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReciboPago = new javax.swing.JTable();
        btnQuitar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPago = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCuentaCorriente = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("CAJA");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BUSCAR CONTRIBUYENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        btnTicket.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(btnTicket);
        btnTicket.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTicket.setForeground(new java.awt.Color(255, 255, 255));
        btnTicket.setSelected(true);
        btnTicket.setText("TICKET");
        btnTicket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTicketActionPerformed(evt);
            }
        });

        btnContribuyente.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(btnContribuyente);
        btnContribuyente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnContribuyente.setForeground(new java.awt.Color(255, 255, 255));
        btnContribuyente.setText("CONTRIBUYENTE");
        btnContribuyente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnContribuyente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContribuyenteActionPerformed(evt);
            }
        });

        txtBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarMouseClicked(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cliente.png"))); // NOI18N
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTicket)
                    .addComponent(btnContribuyente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnBuscar)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTicket)
                        .addGap(18, 18, 18)
                        .addComponent(btnContribuyente))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBuscar)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RECIBO DE PAGO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tablaReciboPago.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaReciboPago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaReciboPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaReciboPago.getTableHeader().setResizingAllowed(false);
        tablaReciboPago.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaReciboPago);

        btnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/quitar.png"))); // NOI18N
        btnQuitar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PAGO FINAL S/.:");

        txtPago.setEditable(false);
        txtPago.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtPago, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnQuitar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnQuitar)
                    .addComponent(jLabel1)
                    .addComponent(txtPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ESTADO DE CUENTA CORRIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tablaCuentaCorriente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaCuentaCorriente.setModel(this.MTCC);
        tablaCuentaCorriente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaCuentaCorriente.getTableHeader().setResizingAllowed(false);
        tablaCuentaCorriente.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaCuentaCorriente);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/agregar.png"))); // NOI18N
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAgregar)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salida.png"))); // NOI18N
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/disco-flexible.png"))); // NOI18N
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardar)
                .addGap(27, 27, 27)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTicketActionPerformed
        txtBuscar.setText("");
        txtBuscar.setEditable(true);
        objV = null;
    }//GEN-LAST:event_btnTicketActionPerformed

    private void btnContribuyenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContribuyenteActionPerformed
        txtBuscar.setText("");
        txtBuscar.setEditable(false);
    }//GEN-LAST:event_btnContribuyenteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (this.btnTicket.isSelected()) {
            this.buscarTicket();
        } else {
            this.buscar();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        if (txtBuscar.getText().trim().length() >= 10) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        this.agregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        this.quitar();
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void txtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseClicked
        if (this.btnContribuyente.isSelected()) {
            this.abrirBuscadorVivienda();
        }
    }//GEN-LAST:event_txtBuscarMouseClicked

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.btnBuscar.doClick();
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        this.guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JRadioButton btnContribuyente;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JRadioButton btnTicket;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaCuentaCorriente;
    private javax.swing.JTable tablaReciboPago;
    public static javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtPago;
    // End of variables declaration//GEN-END:variables

    private void botones() {
        this.btnCancelar.setOpaque(false);
        this.btnCancelar.setContentAreaFilled(false);
        this.btnCancelar.setBorderPainted(false);
        this.btnCancelar.setToolTipText("Cancelar");

        this.btnSalir.setOpaque(false);
        this.btnSalir.setContentAreaFilled(false);
        this.btnSalir.setBorderPainted(false);
        this.btnSalir.setToolTipText("Salir");

        this.btnGuardar.setOpaque(false);
        this.btnGuardar.setContentAreaFilled(false);
        this.btnGuardar.setBorderPainted(false);
        this.btnGuardar.setToolTipText("Guardar");

        this.btnBuscar.setOpaque(false);
        this.btnBuscar.setContentAreaFilled(false);
        this.btnBuscar.setBorderPainted(false);
        this.btnBuscar.setToolTipText("Buscar");

        this.btnAgregar.setOpaque(false);
        this.btnAgregar.setContentAreaFilled(false);
        this.btnAgregar.setBorderPainted(false);
        this.btnAgregar.setToolTipText("Agregar");

        this.btnQuitar.setOpaque(false);
        this.btnQuitar.setContentAreaFilled(false);
        this.btnQuitar.setBorderPainted(false);
        this.btnQuitar.setToolTipText("Quitar");
    }

    private void activarControles(boolean estado) {
        this.btnGuardar.setEnabled(estado);
        this.btnCancelar.setEnabled(estado);
        this.btnAgregar.setEnabled(estado);
        this.btnQuitar.setEnabled(estado);
        this.tablaCuentaCorriente.setEnabled(estado);
        this.tablaReciboPago.setEnabled(estado);
        this.txtPago.setEnabled(estado);

        this.btnTicket.setEnabled(!estado);
        this.btnContribuyente.setEnabled(!estado);
        txtBuscar.setEnabled(!estado);
        this.btnBuscar.setEnabled(!estado);
    }

    private void abrirBuscadorVivienda() {
        frmBuscarVivienda frmBuscar = new frmBuscarVivienda(2);
        frmPrincipalAgua.PanelPrincipal.add(frmBuscar);
        frmBuscar.setVisible(true);
        Dimension desktopSize = frmPrincipalAgua.PanelPrincipal.getSize();
        Dimension FrameSize = frmBuscar.getSize();
        frmBuscar.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        try {
            this.setIcon(true);
            this.setVisible(false);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmVivienda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void definir_tama√±o_columna() {
        TableColumnModel columnModel2 = this.tablaCuentaCorriente.getColumnModel();
        columnModel2.getColumn(0).setPreferredWidth(100);
        columnModel2.getColumn(1).setPreferredWidth(100);
        columnModel2.getColumn(2).setPreferredWidth(200);
        columnModel2.getColumn(3).setPreferredWidth(200);
        columnModel2.getColumn(4).setPreferredWidth(150);

        this.tablaCuentaCorriente.getTableHeader().setFont(new Font("Tahoma", 1, 14));
        ((DefaultTableCellRenderer) this.tablaCuentaCorriente.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void cargarTablaPago() {
        detallePredio = new DefaultTableModel();
        this.tablaReciboPago.setModel(detallePredio);
        String titu[] = {"A√ëO", "MES", "EMISI√ìN", "PAGO", "AGUA"};
        detallePredio.setColumnIdentifiers(titu);
        this.tablaReciboPago.getColumnModel().getColumn(0).setPreferredWidth(30);
        this.tablaReciboPago.getColumnModel().getColumn(1).setPreferredWidth(200);

        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        DefaultTableCellRenderer tcc = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);
        tcc.setHorizontalAlignment(SwingConstants.CENTER);
        this.tablaReciboPago.getColumnModel().getColumn(2).setCellRenderer(tcr);
        this.tablaReciboPago.getColumnModel().getColumn(3).setCellRenderer(tcr);
        this.tablaReciboPago.getColumnModel().getColumn(4).setCellRenderer(tcr);

        TableColumnModel columnModel = this.tablaReciboPago.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(200);
        columnModel.getColumn(3).setPreferredWidth(200);
        columnModel.getColumn(4).setPreferredWidth(150);
        this.tablaReciboPago.getTableHeader().setFont(new Font("Tahoma", 1, 14));
        ((DefaultTableCellRenderer) this.tablaReciboPago.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void buscar() {
        if (!txtBuscar.getText().trim().equals("")) {
            try {
                ltsCuentaCorriente = CajaBo.obtenerListaRecibo(objV.getIdVivienda());
                if (!ltsCuentaCorriente.isEmpty()) {
                    MTCC.setListado_ReciboSaniamiento(ltsCuentaCorriente);
                    this.activarControles(true);
                } else {
                    JOptionPane.showMessageDialog(this, "El Contribuyente especificado no ha tiene Recibos por Pagar.", "MENSAJE --> TICKET", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no ha especificado el Contribuyente a Buscar.", "MENSAJE --> CONTRIBUYENTE", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void buscarTicket() {
        if (!txtBuscar.getText().trim().equals("")) {
            int ticket = Integer.parseInt(txtBuscar.getText());
            try {
                int idVivienda = CajaBo.buscarTicket(String.format("%010d", ticket));
                if (idVivienda > 0) {
                    ltsCuentaCorriente = CajaBo.obtenerListaRecibo(idVivienda);
                    MTCC.setListado_ReciboSaniamiento(ltsCuentaCorriente);
                    this.activarControles(true);
                } else {
                    JOptionPane.showMessageDialog(this, "El ticket ingresado no existe.", "MENSAJE --> TICKET", JOptionPane.WARNING_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no ha ingresado un Ticket a Buscar.", "MENSAJE --> TICKET", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void agregar() {
        int fila = this.tablaCuentaCorriente.getSelectedRow();
        if (fila != -1) {
            this.objRS = MTCC.getReciboSaniamiento(fila);
            this.pasarDatos(objRS);
            this.ltsCuentaCorriente.remove(fila);
            MTCC.setListado_ReciboSaniamiento(ltsCuentaCorriente);
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla \n"
                    + "'ESTADO DE CUENTA CORRIENTE'.", "MENSAJE --> CAJA", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void pasarDatos(ReciboSaniamiento objRS) {
        this.ltsReciboPago.add(objRS);

        String rowData[] = new String[7];
        rowData[0] = String.valueOf(objRS.getAnio());
        rowData[1] = objRS.getMes().trim();
        rowData[2] = this.convertDate(objRS.getFechaEmision());
        rowData[3] = this.convertDate(objRS.getFechaPago());
        rowData[4] = String.valueOf(objRS.getImpAgua());
        detallePredio.addRow(rowData);

        this.montoPagar += objRS.getImpAgua();
        this.txtPago.setText(String.valueOf(montoPagar));
    }

    private void quitar() {
        int fila = this.tablaReciboPago.getSelectedRow();
        if (fila != -1) {
            detallePredio.removeRow(fila);
            this.ltsCuentaCorriente.add(ltsReciboPago.get(fila));
            this.montoPagar -= ltsReciboPago.get(fila).getImpAgua();

            this.txtPago.setText(String.valueOf(montoPagar));
            MTCC.setListado_ReciboSaniamiento(ltsCuentaCorriente);
            ltsReciboPago.remove(fila);
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla \n"
                    + "'RECIBO DE PAGO'.", "MENSAJE --> CAJA", JOptionPane.ERROR_MESSAGE);
        }
    }

    private String convertDate(String dateStr) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate date = LocalDate.parse(dateStr, formatter);
        return date.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
    }

    private void guardar() {
        if (this.general()) {
            Calendar cal = Calendar.getInstance();
            Timestamp fecha_hora = new Timestamp(cal.getTimeInMillis());
            String fechaSistema = String.valueOf(fecha_hora);

            Caja objCa = new Caja(0, fechaSistema.substring(0, 10), Double.parseDouble(this.txtPago.getText()), 0,
                    Double.parseDouble(this.txtPago.getText()), ltsReciboPago.get(0).getObjVivienda());
            try {
                if (CajaBo.grabarCaja(objCa)) {
                    JOptionPane.showMessageDialog(this, "Se Registr√≥ Correctamente", "MENSAJE --> CAJA", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo Registrar", "MENSAJE --> CAJA", JOptionPane.ERROR_MESSAGE);
                }
                               
                for (ReciboSaniamiento objRSiv: ltsReciboPago) {
                    ReciboSaniamientoBo.modificarRecibo(objRSiv.getIdRecibo());
                }
                MorososBo.eliminarMorosos(ltsReciboPago.get(0).getObjVivienda().getIdVivienda());
                MorososBo.generarMororos();
                this.cancelar();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no ha especificado que Recibos van a ser cancelados. \n"
                    + "Tabla Recibo de Pago no contiene datos.", "MENSAJE --> CAJA", JOptionPane.WARNING_MESSAGE);
        }
    }

    private boolean general() {
        if (this.txtPago.getText().trim().equals("") || this.ltsReciboPago.isEmpty()
                || txtBuscar.getText().trim().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    private void cancelar() {
        frmCaja fCaja = new frmCaja();
        frmPrincipalAgua.PanelPrincipal.add(fCaja);
        Dimension desktopSize = frmPrincipalAgua.PanelPrincipal.getSize();
        Dimension FrameSize = fCaja.getSize();
        fCaja.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        fCaja.setVisible(true);
        this.dispose();
    }
}
