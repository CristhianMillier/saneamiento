package Vista;

import Datos.Contribuyente;
import Datos.Modelo_Tabla_ModContr;
import Datos.MotivoModfContr;
import Datos.Vivienda;
import Datos.imgTabla;
import Negocio.MotivoModfContrBo;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.beans.PropertyVetoException;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;

public class frmModfProp extends javax.swing.JInternalFrame {

    private Modelo_Tabla_ModContr MTMC = new Modelo_Tabla_ModContr();

    public static Vivienda objViv = null;
    public static Contribuyente objCon = null;
    private MotivoModfContr objMC = null;
    private String ruta_archivo = null;
    private byte[] documento = null;

    /**
     * Creates new form frmModfProp
     */
    public frmModfProp() {
        initComponents();
        this.botonos();
        this.activarControles(false);
        this.tablaModificacion.setDefaultRenderer(Object.class, new imgTabla());
        this.cargarTabla();
        this.definir_tamaño_columna();
        this.cargarFecha();
        this.txtFechaDoc.setCursor(new Cursor(Cursor.HAND_CURSOR));
        this.tablaModificacion.setRowHeight(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCargarDocumento = new javax.swing.JButton();
        btnVerDocumento = new javax.swing.JButton();
        txtVivienda = new javax.swing.JTextField();
        txtFechaDoc = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAsunto = new javax.swing.JTextArea();
        txtDestinatario = new javax.swing.JTextField();
        txtFechaRecp = new javax.swing.JTextField();
        txtActContri = new javax.swing.JTextField();
        btnBuscarVivienda = new javax.swing.JButton();
        btnBuscarContribuyente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaModificacion = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnPerNatu = new javax.swing.JRadioButton();
        btnRazSocial = new javax.swing.JRadioButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("MODIFICAR PROPIETARIO");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/documento.png"))); // NOI18N
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/disco-flexible.png"))); // NOI18N
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/codigo-limpio.png"))); // NOI18N
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salida.png"))); // NOI18N
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir)
                    .addComponent(btnLimpiar)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("VIVIENDA:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("FECHA DOCUMENTO:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ASUNTO:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DESTINATARIO:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("FECHA RECEPCIÓN:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CONTRIBUYENTE ACTUAL:");

        btnCargarDocumento.setBackground(new java.awt.Color(51, 153, 0));
        btnCargarDocumento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCargarDocumento.setText("CARGAR DOCUMENTO....");
        btnCargarDocumento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDocumentoActionPerformed(evt);
            }
        });

        btnVerDocumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/verDocumento.png"))); // NOI18N
        btnVerDocumento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDocumentoActionPerformed(evt);
            }
        });

        txtVivienda.setEditable(false);
        txtVivienda.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtFechaDoc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtAsunto.setColumns(20);
        txtAsunto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAsunto.setLineWrap(true);
        txtAsunto.setRows(5);
        txtAsunto.setWrapStyleWord(true);
        txtAsunto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAsuntoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAsuntoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtAsunto);

        txtDestinatario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDestinatario.setText("ALCALDE");
        txtDestinatario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDestinatarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDestinatarioKeyTyped(evt);
            }
        });

        txtFechaRecp.setEditable(false);
        txtFechaRecp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtActContri.setEditable(false);
        txtActContri.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnBuscarVivienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscarVivienda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarVivienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarViviendaActionPerformed(evt);
            }
        });

        btnBuscarContribuyente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cliente.png"))); // NOI18N
        btnBuscarContribuyente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarContribuyente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarContribuyenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(3, 3, 3))
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarVivienda))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtFechaRecp, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtActContri, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnBuscarContribuyente))
                                .addComponent(txtDestinatario))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnCargarDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVerDocumento)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBuscarVivienda))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(txtFechaDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtFechaRecp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtActContri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnBuscarContribuyente)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCargarDocumento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerDocumento, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(68, 68, 68))
        );

        JTextFieldDateEditor editor = (JTextFieldDateEditor) txtFechaDoc.getDateEditor();
        editor.setEditable(false);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MODIFICACIONES REGISTRADAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tablaModificacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaModificacion.setModel(this.MTMC);
        tablaModificacion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaModificacion.getTableHeader().setResizingAllowed(false);
        tablaModificacion.getTableHeader().setReorderingAllowed(false);
        tablaModificacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaModificacionMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaModificacion);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/curriculum.png"))); // NOI18N
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnPerNatu.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(btnPerNatu);
        btnPerNatu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPerNatu.setForeground(new java.awt.Color(255, 255, 255));
        btnPerNatu.setSelected(true);
        btnPerNatu.setText("PERSONA NATUAL");
        btnPerNatu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPerNatu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerNatuActionPerformed(evt);
            }
        });

        btnRazSocial.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(btnRazSocial);
        btnRazSocial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRazSocial.setForeground(new java.awt.Color(255, 255, 255));
        btnRazSocial.setText("RAZON SOCIAL");
        btnRazSocial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRazSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRazSocialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRazSocial)
                    .addComponent(btnPerNatu))
                .addGap(35, 35, 35)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnEditar)
                .addGap(116, 116, 116))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnEditar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPerNatu)
                        .addGap(18, 18, 18)
                        .addComponent(btnRazSocial))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        this.txtBuscar.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        if (this.txtBuscar.getText().trim().length() >= 50) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        txtBuscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                String texto = txtBuscar.getText() + e.getKeyChar();
                if (texto.matches(".*(.)\\1{2,}.*")) {
                    e.consume(); // Ignora la tecla si tiene más de 2 caracteres iguales seguidos
                }
            }
        });
        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        this.buscar();
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void tablaModificacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaModificacionMouseClicked
        this.clicTabla(evt);
    }//GEN-LAST:event_tablaModificacionMouseClicked

    private void btnPerNatuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerNatuActionPerformed
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnPerNatuActionPerformed

    private void btnRazSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRazSocialActionPerformed
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnRazSocialActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnVerDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDocumentoActionPerformed
        this.abrirDocumento();
    }//GEN-LAST:event_btnVerDocumentoActionPerformed

    private void btnCargarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarDocumentoActionPerformed
        this.seleccionar_pdf();
    }//GEN-LAST:event_btnCargarDocumentoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.activarControles(true);
        this.limpiar();
        this.cargarTabla();
        this.txtBuscar.setText("");
        this.cargarFecha();
        this.txtDestinatario.setText("ALCALDE");
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtAsuntoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsuntoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtDestinatario.requestFocus();
        }
        this.txtAsunto.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtAsuntoKeyPressed

    private void txtDestinatarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinatarioKeyPressed
        this.txtDestinatario.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtDestinatarioKeyPressed

    private void txtAsuntoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsuntoKeyTyped
        this.validar_llenado(evt, 2);
        if (this.txtAsunto.getText().trim().length() >= 100) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        txtAsunto.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                String texto = txtAsunto.getText() + e.getKeyChar();
                if (texto.matches(".*(.)\\1{2,}.*")) {
                    e.consume(); // Ignora la tecla si tiene más de 2 caracteres iguales seguidos
                }
            }
        });
        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtAsuntoKeyTyped

    private void txtDestinatarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinatarioKeyTyped
        this.validar_llenado(evt, 2);
        if (this.txtDestinatario.getText().trim().length() >= 50) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        txtDestinatario.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                String texto = txtDestinatario.getText() + e.getKeyChar();
                if (texto.matches(".*(.)\\1{2,}.*")) {
                    e.consume(); // Ignora la tecla si tiene más de 2 caracteres iguales seguidos
                }
            }
        });
        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtDestinatarioKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiar();
        this.activarControles(false);
        this.cargarTabla();
        this.cargarFecha();
        this.txtDestinatario.setText("ALCALDE");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.limpiar();
        Calendar cal = Calendar.getInstance();
        Timestamp fecha_hora = new Timestamp(cal.getTimeInMillis());
        String fechaSistema = String.valueOf(fecha_hora);
        try {
            java.util.Date fechaParseada = new SimpleDateFormat("yyyy-MM-dd").parse(fechaSistema.substring(0, 10));
            this.txtFechaDoc.setDate(fechaParseada);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        this.txtDestinatario.setText("ALCALDE");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarContribuyenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarContribuyenteActionPerformed
        this.abrirBuscadorContri();
    }//GEN-LAST:event_btnBuscarContribuyenteActionPerformed

    private void btnBuscarViviendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarViviendaActionPerformed
        this.abrirBuscadorVivienda();
    }//GEN-LAST:event_btnBuscarViviendaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        this.guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarContribuyente;
    private javax.swing.JButton btnBuscarVivienda;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCargarDocumento;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JRadioButton btnPerNatu;
    private javax.swing.JRadioButton btnRazSocial;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVerDocumento;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaModificacion;
    public static javax.swing.JTextField txtActContri;
    private javax.swing.JTextArea txtAsunto;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDestinatario;
    private com.toedter.calendar.JDateChooser txtFechaDoc;
    private javax.swing.JTextField txtFechaRecp;
    public static javax.swing.JTextField txtVivienda;
    // End of variables declaration//GEN-END:variables

    private void validar_llenado(java.awt.event.KeyEvent evt, int opc) {
        //opc: 1 es para ingresar solo números
        //opc: 2 es para ingresar solo letras
        char validar = evt.getKeyChar();
        if (opc == 1) {
            if (Character.isLetter(validar) && validar != KeyEvent.VK_SPACE
                    && validar != KeyEvent.VK_ENTER) {
                getToolkit().beep(); //sonido de alerta
                evt.consume();
            }
        }
        if (opc == 2) {
            if (Character.isDigit(validar) && validar != KeyEvent.VK_SPACE
                    && validar != KeyEvent.VK_ENTER) {
                getToolkit().beep(); //sonido de alerta
                evt.consume();
            }
        }
    }

    private void botonos() {
        this.btnCancelar.setOpaque(false);
        this.btnCancelar.setContentAreaFilled(false);
        this.btnCancelar.setBorderPainted(false);
        this.btnCancelar.setToolTipText("Cancelar");

        this.btnNuevo.setOpaque(false);
        this.btnNuevo.setContentAreaFilled(false);
        this.btnNuevo.setBorderPainted(false);
        this.btnNuevo.setToolTipText("Nuevo");

        this.btnGuardar.setOpaque(false);
        this.btnGuardar.setContentAreaFilled(false);
        this.btnGuardar.setBorderPainted(false);
        this.btnGuardar.setToolTipText("Guardar");

        this.btnLimpiar.setOpaque(false);
        this.btnLimpiar.setContentAreaFilled(false);
        this.btnLimpiar.setBorderPainted(false);
        this.btnLimpiar.setToolTipText("Limpiar");

        this.btnSalir.setOpaque(false);
        this.btnSalir.setContentAreaFilled(false);
        this.btnSalir.setBorderPainted(false);
        this.btnSalir.setToolTipText("Salir");

        this.btnEditar.setOpaque(false);
        this.btnEditar.setContentAreaFilled(false);
        this.btnEditar.setBorderPainted(false);
        this.btnEditar.setToolTipText("Editar");

        this.btnBuscarContribuyente.setOpaque(false);
        this.btnBuscarContribuyente.setContentAreaFilled(false);
        this.btnBuscarContribuyente.setBorderPainted(false);
        this.btnBuscarContribuyente.setToolTipText("Buscar Contribuyente");

        this.btnBuscarVivienda.setOpaque(false);
        this.btnBuscarVivienda.setContentAreaFilled(false);
        this.btnBuscarVivienda.setBorderPainted(false);
        this.btnBuscarVivienda.setToolTipText("Buscar Vivienda");

        this.btnVerDocumento.setOpaque(false);
        this.btnVerDocumento.setContentAreaFilled(false);
        this.btnVerDocumento.setBorderPainted(false);
        this.btnVerDocumento.setToolTipText("Ver Documento");
    }

    private void activarControles(boolean estado) {
        txtVivienda.setEnabled(estado);
        txtActContri.setEnabled(estado);
        this.txtFechaDoc.setEnabled(estado);
        this.txtFechaRecp.setEnabled(estado);
        this.txtAsunto.setEnabled(estado);
        this.txtDestinatario.setEnabled(estado);
        this.btnGuardar.setEnabled(estado);
        this.btnLimpiar.setEnabled(estado);
        this.btnCancelar.setEnabled(estado);
        this.btnBuscarContribuyente.setEnabled(estado);
        this.btnBuscarVivienda.setEnabled(estado);
        this.btnVerDocumento.setEnabled(estado);
        this.btnCargarDocumento.setEnabled(estado);

        this.btnNuevo.setEnabled(!estado);
        this.btnEditar.setEnabled(!estado);
        this.txtBuscar.setEnabled(!estado);
        this.tablaModificacion.setEnabled(!estado);
        this.btnRazSocial.setEnabled(!estado);
        this.btnPerNatu.setEnabled(!estado);

        if (estado) {
            tablaModificacion.setBackground(new java.awt.Color(255, 102, 102));
        } else {
            tablaModificacion.setBackground(new java.awt.Color(255, 255, 255));
        }
    }

    private void limpiar() {
        txtVivienda.setText("");
        this.txtAsunto.setText("");
        txtActContri.setText("");
        this.txtFechaDoc.setCalendar(null);
        this.txtDestinatario.setText("");
        this.btnCargarDocumento.setText("CARGAR DOCUMENTO....");

        this.objMC = null;
        this.ruta_archivo = null;
        this.documento = null;
        objCon = null;
        objViv = null;
    }

    private void buscar() {
        String buscar = this.txtBuscar.getText().trim();
        ArrayList<MotivoModfContr> ltsMotivoModfContr = new ArrayList();
        try {
            if (this.btnPerNatu.isSelected()) {
                ltsMotivoModfContr = MotivoModfContrBo.buscarDNIContribuyente(buscar);
                if (ltsMotivoModfContr.isEmpty()) {
                    ltsMotivoModfContr = MotivoModfContrBo.buscarNombreContribuyente(buscar);
                }
                if (ltsMotivoModfContr.isEmpty()) {
                    ltsMotivoModfContr = MotivoModfContrBo.buscarApellidoContribuyente(buscar);
                }
                if (ltsMotivoModfContr.isEmpty()) {
                    ltsMotivoModfContr = MotivoModfContrBo.buscarDirección(buscar);
                }
            } else {
                ltsMotivoModfContr = MotivoModfContrBo.buscarRazonSocialContribuyente(buscar);
                if (ltsMotivoModfContr.isEmpty()) {
                    ltsMotivoModfContr = MotivoModfContrBo.buscarDNIContribuyenteRazonSocial(buscar);
                }
                if (ltsMotivoModfContr.isEmpty()) {
                    ltsMotivoModfContr = MotivoModfContrBo.buscarDirecciónRazonSocial(buscar);
                }
            }
            MTMC.setListado_MotivoModfContr(ltsMotivoModfContr);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void definir_tamaño_columna() {
        TableColumnModel columnModel = this.tablaModificacion.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(300);
        columnModel.getColumn(1).setPreferredWidth(200);
        columnModel.getColumn(2).setPreferredWidth(300);
        columnModel.getColumn(3).setPreferredWidth(150);

        this.tablaModificacion.getTableHeader().setFont(new Font("Tahoma", 1, 12));
        ((DefaultTableCellRenderer) this.tablaModificacion.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void cargarTabla() {
        ArrayList<MotivoModfContr> ltsMotivoModfContr = new ArrayList();
        try {
            if (this.btnPerNatu.isSelected()) {
                ltsMotivoModfContr = MotivoModfContrBo.obtenerListaContribuyente();
            } else {
                ltsMotivoModfContr = MotivoModfContrBo.obtenerListaContribuyenteRazonSocial();
            }
            MTMC.setListado_MotivoModfContr(ltsMotivoModfContr);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void clicTabla(MouseEvent evt) {
        int column = this.tablaModificacion.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = this.tablaModificacion.getSelectedRow(); //fila
        MotivoModfContr objMCc = new MotivoModfContr();

        if (row < this.tablaModificacion.getRowCount() && row >= 0 && column < this.tablaModificacion.getColumnCount() && column >= 0) {
            objMCc = MTMC.getMotivoModfContr(row);

            Object value = this.tablaModificacion.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getText().equals("VACÍO")) {
                    JOptionPane.showMessageDialog(this, "No existe el archivo en la Base de Datos.", "MENSAJE --> Documento", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    try {
                        InputStream bos = new ByteArrayInputStream(objMCc.getArchivopdf());
                        int tamanoInput = bos.available();
                        byte[] datosPDF = new byte[tamanoInput];
                        bos.read(datosPDF, 0, tamanoInput);
                        OutputStream out = new FileOutputStream("new.pdf");
                        out.write(datosPDF);
                        //abrir archivo
                        out.close();
                        bos.close();
                        Desktop.getDesktop().open(new File("new.pdf"));
                    } catch (IOException ex) {
                        System.out.println(ex.getMessage());
                        JOptionPane.showMessageDialog(this, "Error al Intentar Abrir el Archivo", "MENSAJE --> DOCUMENTO", JOptionPane.ERROR_MESSAGE);
                    }
                }

            }
        }
    }

    private void editar() {
        this.txtBuscar.setText("");
        int fila = this.tablaModificacion.getSelectedRow();
        if (fila != -1) {
            this.objMC = MTMC.getMotivoModfContr(fila);
            this.activarControles(true);
            this.cargarDatos(objMC);
            this.cargarTabla();
            this.btnLimpiar.setEnabled(false);
            this.btnBuscarContribuyente.setEnabled(false);
            this.btnBuscarVivienda.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla.", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarDatos(MotivoModfContr objMC) {
        try {
            java.util.Date fechaParseada = new SimpleDateFormat("dd/MM/yyyy").parse(this.convertDate(objMC.getFechaDoc()));

            txtVivienda.setText(objMC.getObjV().getDireccion() + " " + objMC.getObjV().getNroVivienda());
            this.txtFechaDoc.setDate(fechaParseada);
            this.txtAsunto.setText(objMC.getAsunto());
            this.txtDestinatario.setText(objMC.getDestinatario());
            this.txtFechaRecp.setText(this.convertDate(objMC.getFechaRec()));
            txtActContri.setText(objMC.getObjV().getObjCont().toString());

            if (objMC.getArchivopdf() != null) {
                this.btnCargarDocumento.setText("DOCUMENTO CARGADO");
                this.documento = objMC.getArchivopdf();
                this.ruta_archivo = null;
            }
        } catch (ParseException e) {
            System.out.println(e.getMessage());
        }
        objViv = objMC.getObjV();
        objCon = objMC.getObjV().getObjCont();
    }

    private void abrirDocumento() {
        if (this.documento != null) {
            InputStream ver = new ByteArrayInputStream(this.documento);
            this.verDocumento(ver);
            if (this.ruta_archivo != null) {
                try {
                    File ruta = new File(ruta_archivo);
                    InputStream ver2 = new FileInputStream(ruta);
                    this.verDocumento(ver2);
                } catch (Exception e) {
                }
            }
        } else {
            if (this.ruta_archivo != null) {
                try {
                    File ruta = new File(ruta_archivo);
                    InputStream ver = new FileInputStream(ruta);
                    this.verDocumento(ver);
                } catch (Exception e) {
                }
            } else {
                JOptionPane.showMessageDialog(this, "Usted aún no a seleccionado un archivo PDF.", "MENSAJE --> DOCUMENTO", JOptionPane.WARNING_MESSAGE);
            }
        }

    }

    private void verDocumento(InputStream ver) {
        try {
            int tamanoInput = ver.available();
            byte[] datosPDF = new byte[tamanoInput];
            ver.read(datosPDF, 0, tamanoInput);
            OutputStream out = new FileOutputStream("new.pdf");
            out.write(datosPDF);
            //abrir archivo
            out.close();
            ver.close();
            Desktop.getDesktop().open(new File("new.pdf"));
        } catch (IOException e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, "Error al Intentar Abrir el Archivo", "MENSAJE --> DOCUMENTO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void seleccionar_pdf() {
        JFileChooser j = new JFileChooser();
        j.setDialogTitle("SELECCIONE UN ARCHIVO PDF");
        FileNameExtensionFilter fi = new FileNameExtensionFilter("PDF Files", "pdf");
        j.setFileFilter(fi);
        int se = j.showOpenDialog(this);
        if (se == 0) {
            this.btnCargarDocumento.setText("DOCUMENTO CARGADO");
            this.ruta_archivo = j.getSelectedFile().getAbsolutePath();
        }
    }

    private void cargarFecha() {
        Calendar cal = Calendar.getInstance();
        Timestamp fecha_hora = new Timestamp(cal.getTimeInMillis());
        String fechaSistema = String.valueOf(fecha_hora);
        this.txtFechaRecp.setText(this.convertDate(fechaSistema.substring(0, 10)));
        try {
            java.util.Date fechaParseada = new SimpleDateFormat("dd/MM/yyyy").parse(this.convertDate(fechaSistema.substring(0, 10)));
            this.txtFechaDoc.setDate(fechaParseada);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void abrirBuscadorContri() {
        frmBuscarContribuyente frmBuscar = new frmBuscarContribuyente(2);
        frmPrincipalAgua.PanelPrincipal.add(frmBuscar);
        frmBuscar.setVisible(true);
        Dimension desktopSize = frmPrincipalAgua.PanelPrincipal.getSize();
        Dimension FrameSize = frmBuscar.getSize();
        frmBuscar.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        try {
            this.setIcon(true);
            this.setVisible(false);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmVivienda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void abrirBuscadorVivienda() {
        frmBuscarVivienda frmBuscar = new frmBuscarVivienda(1);
        frmPrincipalAgua.PanelPrincipal.add(frmBuscar);
        frmBuscar.setVisible(true);
        Dimension desktopSize = frmPrincipalAgua.PanelPrincipal.getSize();
        Dimension FrameSize = frmBuscar.getSize();
        frmBuscar.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        try {
            this.setIcon(true);
            this.setVisible(false);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmVivienda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void guardar() {
        if (this.general()) {
            MotivoModfContr objMM = new MotivoModfContr(0, objViv, this.convertDateBD(((JTextField) this.txtFechaDoc.getDateEditor().getUiComponent()).getText()),
                    this.txtAsunto.getText(), this.convertDateBD(this.txtFechaRecp.getText()), this.txtDestinatario.getText(), null, objCon);
            try {
                if (this.objMC == null) {
                    if (MotivoModfContrBo.grabarMotivoModfContr(objMM)) {
                        JOptionPane.showMessageDialog(this, "Se Registró Correctamente", "MENSAJE --> MODIFICACIÓN", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo Registrar", "MENSAJE --> MODIFICACIÓN", JOptionPane.ERROR_MESSAGE);
                    }
                    MotivoModfContrBo.modificarPropiedad(objMM);
                    if (this.ruta_archivo != null) {
                        MotivoModfContrBo.grabarDocumento(obtenerRuta(), MotivoModfContrBo.ultimoIdMotivoModf());
                    }
                    this.limpiar();
                    this.activarControles(false);
                    this.cargarTabla();
                } else {
                    objMM.setIdActVivienda(this.objMC.getIdActVivienda());
                    if (MotivoModfContrBo.modificarMotivoModfContr(objMM)) {
                        JOptionPane.showMessageDialog(this, "Se Modificó Correctamente", "MENSAJE --> MODIFICACIÓN", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo Modificar", "MENSAJE --> MODIFICACIÓN", JOptionPane.ERROR_MESSAGE);
                    }
                    if (this.ruta_archivo != null) {
                        MotivoModfContrBo.modificarDocumento(obtenerRuta(), objMM.getIdActVivienda());
                    }
                    this.limpiar();
                    this.activarControles(false);
                    this.cargarTabla();
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Verifique que todos los campos hallan sido llenados.", "MENSAJE --> MODIFICACIÓN", JOptionPane.WARNING_MESSAGE);
        }
    }

    private boolean general() {
        if (((JTextField) this.txtFechaDoc.getDateEditor().getUiComponent()).getText().trim().equals("") || objViv == null
                || objCon == null || this.txtAsunto.getText().trim().equals("") || this.txtDestinatario.getText().trim().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    private byte[] obtenerRuta() {
        File ruta = new File(ruta_archivo);
        byte[] pdf;
        try {
            pdf = new byte[(int) ruta.length()];
            InputStream input = new FileInputStream(ruta);
            input.read(pdf);
        } catch (IOException ex) {
            pdf = null;
        }
        return pdf;
    }

    private String convertDateBD(String dateStr) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate date = LocalDate.parse(dateStr, formatter);
        return date.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
    }

    private String convertDate(String dateStr) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate date = LocalDate.parse(dateStr, formatter);
        return date.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
    }
}
