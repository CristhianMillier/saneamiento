package Vista;

import Datos.Contribuyente;
import Datos.Modelo_Tabla_Vivienda;
import Datos.ReciboSaniamiento;
import Datos.TipoVivienda;
import Datos.Vivienda;
import Negocio.ReciboSaniamientoBo;
import Negocio.TipoViviendaBo;
import Negocio.ViviendaBo;
import Report.ViviendaReport;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class frmVivienda extends javax.swing.JInternalFrame {

    private Modelo_Tabla_Vivienda MTV = new Modelo_Tabla_Vivienda();
    private String estado = "Si";

    private Vivienda objV = null;
    public static Contribuyente objC = null;
    private TipoVivienda objTV = null;

    /**
     * Creates new form frmVivienda
     */
    public frmVivienda() {
        initComponents();
        this.botonos();
        this.activarControles(false);
        this.cargarCombox(1);
        this.cargarTabla();
        this.definir_tama√±o_columna();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnEstado = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtContribuyente = new javax.swing.JTextField();
        txtDomicilo = new javax.swing.JTextField();
        txtNroDomicilio = new javax.swing.JTextField();
        btnComercial = new javax.swing.JRadioButton();
        btnResidencial = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        comboTarifa = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAgua = new javax.swing.JTextField();
        txtBP = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtMontoEne = new javax.swing.JTextField();
        txtFechaPagoEne = new javax.swing.JTextField();
        txtFechaPagoFeb = new javax.swing.JTextField();
        txtMontoFeb = new javax.swing.JTextField();
        txtFechaPagoMar = new javax.swing.JTextField();
        txtMontoMar = new javax.swing.JTextField();
        txtFechaPagoAbr = new javax.swing.JTextField();
        txtMontoAbr = new javax.swing.JTextField();
        txtFechaPagoMay = new javax.swing.JTextField();
        txtMontoMay = new javax.swing.JTextField();
        txtFechaPagoJun = new javax.swing.JTextField();
        txtMontoJun = new javax.swing.JTextField();
        txtFechaPagoJul = new javax.swing.JTextField();
        txtMontoJul = new javax.swing.JTextField();
        txtFechaPagoAgo = new javax.swing.JTextField();
        txtMontoAgo = new javax.swing.JTextField();
        txtFechaPagoSet = new javax.swing.JTextField();
        txtMontoSet = new javax.swing.JTextField();
        txtFechaPagoOct = new javax.swing.JTextField();
        txtMontoOct = new javax.swing.JTextField();
        txtFechaPagoNov = new javax.swing.JTextField();
        txtMontoNov = new javax.swing.JTextField();
        txtFechaPagoDic = new javax.swing.JTextField();
        txtMontoDic = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtDeuda = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        txtMesesSinPago = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVivienda = new javax.swing.JTable();
        btnPerNatu = new javax.swing.JRadioButton();
        btnRazSocial = new javax.swing.JRadioButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("VIVIENDA");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/documento.png"))); // NOI18N
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/disco-flexible.png"))); // NOI18N
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/codigo-limpio.png"))); // NOI18N
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.png"))); // NOI18N
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salida.png"))); // NOI18N
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/impresora.png"))); // NOI18N
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addGap(18, 18, 18)
                .addComponent(btnImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnImprimir)
                    .addComponent(btnSalir)
                    .addComponent(btnLimpiar)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL USUARIO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        btnEstado.setBackground(new java.awt.Color(0, 153, 153));
        btnEstado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEstado.setForeground(new java.awt.Color(255, 255, 255));
        btnEstado.setSelected(true);
        btnEstado.setText("ACTIVO");
        btnEstado.setToolTipText("");
        btnEstado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/seleccion.png"))); // NOI18N
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CONTRIBUYENTE:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DOMICILIO:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NRO. DOMICILIO:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("TIPO DE USUARIO:");

        txtContribuyente.setEditable(false);
        txtContribuyente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtDomicilo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDomicilo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDomiciloKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDomiciloKeyTyped(evt);
            }
        });

        txtNroDomicilio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNroDomicilio.setText("S/N");
        txtNroDomicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNroDomicilioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNroDomicilioKeyTyped(evt);
            }
        });

        btnComercial.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(btnComercial);
        btnComercial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnComercial.setText("COMERCIAL");
        btnComercial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnComercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComercialActionPerformed(evt);
            }
        });

        btnResidencial.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup1.add(btnResidencial);
        btnResidencial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnResidencial.setSelected(true);
        btnResidencial.setText("RESIDENCIAL");
        btnResidencial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnResidencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResidencialActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TARIFA:");

        comboTarifa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboTarifa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboTarifa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTarifaItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("AGUA:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("BAJA POLICIA:");

        txtAgua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAgua.setText("0.00");
        txtAgua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAguaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAguaKeyTyped(evt);
            }
        });

        txtBP.setEditable(false);
        txtBP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBP.setText("0.00");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cliente.png"))); // NOI18N
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDomicilo)
                            .addComponent(txtNroDomicilio)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnResidencial)
                                .addGap(53, 53, 53)
                                .addComponent(btnComercial)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtContribuyente)
                            .addComponent(comboTarifa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEstado)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtAgua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(btnBuscar)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtContribuyente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDomicilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNroDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnComercial)
                    .addComponent(btnResidencial))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(comboTarifa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtAgua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnEstado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AutoCompleteDecorator.decorate(comboTarifa);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CUENTA CORRIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("ENERO:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("FEBRERO:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("MARZO:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("ABRIL:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("MAYO:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("JUNIO:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("JULIO:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("AGOSTO:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("SETIEMBRE:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("OCTUBRE:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("DICIEMBRE:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("NOVIEMBRE:");

        txtMontoEne.setEditable(false);
        txtMontoEne.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoEne.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoEne.setText("0.00");

        txtFechaPagoEne.setEditable(false);
        txtFechaPagoEne.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoEne.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoEne.setText("dd/mm/yyyy");

        txtFechaPagoFeb.setEditable(false);
        txtFechaPagoFeb.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoFeb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoFeb.setText("dd/mm/yyyy");

        txtMontoFeb.setEditable(false);
        txtMontoFeb.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoFeb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoFeb.setText("0.00");

        txtFechaPagoMar.setEditable(false);
        txtFechaPagoMar.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoMar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoMar.setText("dd/mm/yyyy");

        txtMontoMar.setEditable(false);
        txtMontoMar.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoMar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoMar.setText("0.00");

        txtFechaPagoAbr.setEditable(false);
        txtFechaPagoAbr.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoAbr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoAbr.setText("dd/mm/yyyy");

        txtMontoAbr.setEditable(false);
        txtMontoAbr.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoAbr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoAbr.setText("0.00");

        txtFechaPagoMay.setEditable(false);
        txtFechaPagoMay.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoMay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoMay.setText("dd/mm/yyyy");

        txtMontoMay.setEditable(false);
        txtMontoMay.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoMay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoMay.setText("0.00");

        txtFechaPagoJun.setEditable(false);
        txtFechaPagoJun.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoJun.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoJun.setText("dd/mm/yyyy");

        txtMontoJun.setEditable(false);
        txtMontoJun.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoJun.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoJun.setText("0.00");

        txtFechaPagoJul.setEditable(false);
        txtFechaPagoJul.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoJul.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoJul.setText("dd/mm/yyyy");

        txtMontoJul.setEditable(false);
        txtMontoJul.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoJul.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoJul.setText("0.00");

        txtFechaPagoAgo.setEditable(false);
        txtFechaPagoAgo.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoAgo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoAgo.setText("dd/mm/yyyy");

        txtMontoAgo.setEditable(false);
        txtMontoAgo.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoAgo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoAgo.setText("0.00");

        txtFechaPagoSet.setEditable(false);
        txtFechaPagoSet.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoSet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoSet.setText("dd/mm/yyyy");

        txtMontoSet.setEditable(false);
        txtMontoSet.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoSet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoSet.setText("0.00");

        txtFechaPagoOct.setEditable(false);
        txtFechaPagoOct.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoOct.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoOct.setText("dd/mm/yyyy");

        txtMontoOct.setEditable(false);
        txtMontoOct.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoOct.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoOct.setText("0.00");

        txtFechaPagoNov.setEditable(false);
        txtFechaPagoNov.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoNov.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoNov.setText("dd/mm/yyyy");

        txtMontoNov.setEditable(false);
        txtMontoNov.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoNov.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoNov.setText("0.00");

        txtFechaPagoDic.setEditable(false);
        txtFechaPagoDic.setBackground(new java.awt.Color(153, 255, 153));
        txtFechaPagoDic.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtFechaPagoDic.setText("dd/mm/yyyy");

        txtMontoDic.setEditable(false);
        txtMontoDic.setBackground(new java.awt.Color(153, 255, 153));
        txtMontoDic.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMontoDic.setText("0.00");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("DEUDA ANTERIOR:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("DEUDA TOTAL:");

        txtDeuda.setEditable(false);
        txtDeuda.setBackground(new java.awt.Color(153, 255, 153));
        txtDeuda.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDeuda.setText("0.00");

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(153, 255, 153));
        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTotal.setText("0.00");

        txtMesesSinPago.setEditable(false);
        txtMesesSinPago.setBackground(new java.awt.Color(153, 255, 153));
        txtMesesSinPago.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMesesSinPago.setText("S/. 0 de 0 Meses");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("MESES IMPAGOS:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoFeb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoFeb))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoMay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoMay))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoAbr, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoAbr))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoMar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoMar))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoEne, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoEne, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(4, 4, 4)
                        .addComponent(txtMontoJun, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaPagoJun, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMontoDic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaPagoDic, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel15))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel17))
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoJul, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoJul, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoAgo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoAgo))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoSet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoSet))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoOct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoOct))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMontoNov, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaPagoNov, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel21)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(txtTotal)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtMesesSinPago)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtDeuda)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtMontoJul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoJul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtMontoAgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoAgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtMontoSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtMontoOct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoOct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtMontoNov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoNov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtMontoDic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoDic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtMontoEne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoEne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(txtMontoFeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFechaPagoFeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtMontoMar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFechaPagoMar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtMontoAbr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoAbr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMesesSinPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtMontoMay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoMay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtMontoJun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaPagoJun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VIVIENDAS REGISTRADAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/curriculum.png"))); // NOI18N
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        tablaVivienda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaVivienda.setModel(this.MTV);
        tablaVivienda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaVivienda.getTableHeader().setResizingAllowed(false);
        tablaVivienda.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaVivienda);

        btnPerNatu.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup2.add(btnPerNatu);
        btnPerNatu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPerNatu.setForeground(new java.awt.Color(255, 255, 255));
        btnPerNatu.setSelected(true);
        btnPerNatu.setText("PERSONA NATUAL");
        btnPerNatu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPerNatu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerNatuActionPerformed(evt);
            }
        });

        btnRazSocial.setBackground(new java.awt.Color(0, 153, 153));
        buttonGroup2.add(btnRazSocial);
        btnRazSocial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRazSocial.setForeground(new java.awt.Color(255, 255, 255));
        btnRazSocial.setText("RAZON SOCIAL");
        btnRazSocial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRazSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRazSocialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(207, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPerNatu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRazSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(61, 61, 61))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnPerNatu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRazSocial)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        this.clicButtonEstado();
    }//GEN-LAST:event_btnEstadoActionPerformed

    private void btnResidencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResidencialActionPerformed
        this.cargarCombox(1);
        this.txtAgua.setText("0.00");
        this.txtBP.setText("0.00");
    }//GEN-LAST:event_btnResidencialActionPerformed

    private void btnComercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComercialActionPerformed
        this.cargarCombox(2);
        this.txtAgua.setText("0.00");
        this.txtBP.setText("0.00");
    }//GEN-LAST:event_btnComercialActionPerformed

    private void txtDomiciloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDomiciloKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.txtNroDomicilio.requestFocus();
        }
        this.txtDomicilo.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtDomiciloKeyPressed

    private void txtNroDomicilioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroDomicilioKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.comboTarifa.requestFocus();
        }
        this.txtNroDomicilio.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtNroDomicilioKeyPressed

    private void txtDomiciloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDomiciloKeyTyped
        this.validar_llenado(evt, 2);
        if (this.txtDomicilo.getText().trim().length() >= 50) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        txtDomicilo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                String texto = txtDomicilo.getText() + e.getKeyChar();
                if (texto.matches(".*(.)\\1{2,}.*")) {
                    e.consume(); // Ignora la tecla si tiene m√°s de 2 caracteres iguales seguidos
                }
            }
        });
        char c = evt.getKeyChar();
        if (c == ',' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtDomiciloKeyTyped

    private void txtNroDomicilioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroDomicilioKeyTyped
        if (this.txtNroDomicilio.getText().trim().length() >= 5) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }

        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
        if (Character.isWhitespace(c)) {
            evt.consume();
        }
        if (!((c >= '0' && c <= '9') || (c == 'N') || (c == '/') || (c == 'S') || (c == 'n') || (c == 's'))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNroDomicilioKeyTyped

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.limpiar();
        this.cargarTabla();
        this.txtBuscar.setText("");
        this.activarControles(true);
        this.btnImprimir.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void comboTarifaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTarifaItemStateChanged
        if (this.comboTarifa.getSelectedIndex() > 0) {
            this.obtenerDatosCombo();
            this.txtAgua.setText(String.valueOf(this.objTV.getImpAgua()));
            this.txtBP.setText(String.valueOf(this.objTV.getImpBP()));
        }
    }//GEN-LAST:event_comboTarifaItemStateChanged

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        this.txtBuscar.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        if (this.txtBuscar.getText().trim().length() >= 50) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        txtBuscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                String texto = txtBuscar.getText() + e.getKeyChar();
                if (texto.matches(".*(.)\\1{2,}.*")) {
                    e.consume(); // Ignora la tecla si tiene m√°s de 2 caracteres iguales seguidos
                }
            }
        });
        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.abrirBuscador();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiar();
        this.activarControles(false);
        this.cargarTabla();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.eliminar();
        this.cargarTabla();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        this.guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.buttonEditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnPerNatuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerNatuActionPerformed
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnPerNatuActionPerformed

    private void btnRazSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRazSocialActionPerformed
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnRazSocialActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        this.buscar();
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        try {
            ViviendaReport report = new ViviendaReport();
            report.verReporte(this.objV.getIdVivienda(), this.objV.getObjCont().toString());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void txtAguaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAguaKeyTyped
        this.validar_llenado(evt, 1);
        if (this.txtAgua.getText().trim().length() >= 6) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        char c = evt.getKeyChar();
        if (c == ',' || c == '-') {
            evt.consume();
        }
        if (Character.isWhitespace(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAguaKeyTyped

    private void txtAguaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAguaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.btnGuardar.doClick();
        }
    }//GEN-LAST:event_txtAguaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JRadioButton btnComercial;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JCheckBox btnEstado;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JRadioButton btnPerNatu;
    private javax.swing.JRadioButton btnRazSocial;
    private javax.swing.JRadioButton btnResidencial;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<TipoVivienda> comboTarifa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaVivienda;
    private javax.swing.JTextField txtAgua;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtBuscar;
    public static javax.swing.JTextField txtContribuyente;
    private javax.swing.JTextField txtDeuda;
    public static javax.swing.JTextField txtDomicilo;
    private javax.swing.JTextField txtFechaPagoAbr;
    private javax.swing.JTextField txtFechaPagoAgo;
    private javax.swing.JTextField txtFechaPagoDic;
    private javax.swing.JTextField txtFechaPagoEne;
    private javax.swing.JTextField txtFechaPagoFeb;
    private javax.swing.JTextField txtFechaPagoJul;
    private javax.swing.JTextField txtFechaPagoJun;
    private javax.swing.JTextField txtFechaPagoMar;
    private javax.swing.JTextField txtFechaPagoMay;
    private javax.swing.JTextField txtFechaPagoNov;
    private javax.swing.JTextField txtFechaPagoOct;
    private javax.swing.JTextField txtFechaPagoSet;
    private javax.swing.JTextField txtMesesSinPago;
    private javax.swing.JTextField txtMontoAbr;
    private javax.swing.JTextField txtMontoAgo;
    private javax.swing.JTextField txtMontoDic;
    private javax.swing.JTextField txtMontoEne;
    private javax.swing.JTextField txtMontoFeb;
    private javax.swing.JTextField txtMontoJul;
    private javax.swing.JTextField txtMontoJun;
    private javax.swing.JTextField txtMontoMar;
    private javax.swing.JTextField txtMontoMay;
    private javax.swing.JTextField txtMontoNov;
    private javax.swing.JTextField txtMontoOct;
    private javax.swing.JTextField txtMontoSet;
    private javax.swing.JTextField txtNroDomicilio;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void validar_llenado(java.awt.event.KeyEvent evt, int opc) {
        //opc: 1 es para ingresar solo n√∫meros
        //opc: 2 es para ingresar solo letras
        char validar = evt.getKeyChar();
        if (opc == 1) {
            if (Character.isLetter(validar) && validar != KeyEvent.VK_SPACE
                    && validar != KeyEvent.VK_ENTER) {
                getToolkit().beep(); //sonido de alerta
                evt.consume();
            }
        }
        if (opc == 2) {
            if (Character.isDigit(validar) && validar != KeyEvent.VK_SPACE
                    && validar != KeyEvent.VK_ENTER) {
                getToolkit().beep(); //sonido de alerta
                evt.consume();
            }
        }
    }

    private void clicButtonEstado() {
        if (this.btnEstado.isSelected()) {
            ImageIcon icono = new ImageIcon("src/Imagenes/seleccion.png");
            this.btnEstado.setIcon(icono);
            this.btnEstado.setText("ACTIVO");
            this.estado = "Si";
        } else {
            ImageIcon icono = new ImageIcon("src/Imagenes/no-seleccion.png");
            this.btnEstado.setIcon(icono);
            this.btnEstado.setText("INACTIVO");
            this.estado = "No";
        }
    }

    private void botonos() {
        this.btnCancelar.setOpaque(false);
        this.btnCancelar.setContentAreaFilled(false);
        this.btnCancelar.setBorderPainted(false);
        this.btnCancelar.setToolTipText("Cancelar");

        this.btnNuevo.setOpaque(false);
        this.btnNuevo.setContentAreaFilled(false);
        this.btnNuevo.setBorderPainted(false);
        this.btnNuevo.setToolTipText("Nuevo");

        this.btnGuardar.setOpaque(false);
        this.btnGuardar.setContentAreaFilled(false);
        this.btnGuardar.setBorderPainted(false);
        this.btnGuardar.setToolTipText("Guardar");

        this.btnLimpiar.setOpaque(false);
        this.btnLimpiar.setContentAreaFilled(false);
        this.btnLimpiar.setBorderPainted(false);
        this.btnLimpiar.setToolTipText("Limpiar");

        this.btnEliminar.setOpaque(false);
        this.btnEliminar.setContentAreaFilled(false);
        this.btnEliminar.setBorderPainted(false);
        this.btnEliminar.setToolTipText("Eliminar");

        this.btnSalir.setOpaque(false);
        this.btnSalir.setContentAreaFilled(false);
        this.btnSalir.setBorderPainted(false);
        this.btnSalir.setToolTipText("Salir");

        this.btnEditar.setOpaque(false);
        this.btnEditar.setContentAreaFilled(false);
        this.btnEditar.setBorderPainted(false);
        this.btnEditar.setToolTipText("Editar");

        this.btnBuscar.setOpaque(false);
        this.btnBuscar.setContentAreaFilled(false);
        this.btnBuscar.setBorderPainted(false);
        this.btnBuscar.setToolTipText("Buscar");

        this.btnImprimir.setOpaque(false);
        this.btnImprimir.setContentAreaFilled(false);
        this.btnImprimir.setBorderPainted(false);
        this.btnImprimir.setToolTipText("Imprimir");
    }

    private void limpiar() {
        this.cargarCombox(1);

        txtContribuyente.setText("");
        this.txtDomicilo.setText("");
        this.txtNroDomicilio.setText("S/N");
        this.txtAgua.setText("0.00");
        this.txtBP.setText("0.00");
        this.comboTarifa.setSelectedIndex(0);
        this.btnResidencial.setSelected(true);

        this.btnEstado.setSelected(true);
        ImageIcon icono = new ImageIcon("src/Imagenes/seleccion.png");
        this.btnEstado.setIcon(icono);
        this.btnEstado.setText("ACTIVO");

        this.txtMontoEne.setText("0.00");
        this.txtMontoFeb.setText("0.00");
        this.txtMontoMar.setText("0.00");
        this.txtMontoAbr.setText("0.00");
        this.txtMontoMay.setText("0.00");
        this.txtMontoJun.setText("0.00");
        this.txtMontoJul.setText("0.00");
        this.txtMontoAgo.setText("0.00");
        this.txtMontoSet.setText("0.00");
        this.txtMontoOct.setText("0.00");
        this.txtMontoNov.setText("0.00");
        this.txtMontoDic.setText("0.00");

        this.txtFechaPagoAbr.setText("dd/mm/yyyy");
        this.txtFechaPagoAgo.setText("dd/mm/yyyy");
        this.txtFechaPagoDic.setText("dd/mm/yyyy");
        this.txtFechaPagoEne.setText("dd/mm/yyyy");
        this.txtFechaPagoFeb.setText("dd/mm/yyyy");
        this.txtFechaPagoJul.setText("dd/mm/yyyy");
        this.txtFechaPagoJun.setText("dd/mm/yyyy");
        this.txtFechaPagoMar.setText("dd/mm/yyyy");
        this.txtFechaPagoMay.setText("dd/mm/yyyy");
        this.txtFechaPagoNov.setText("dd/mm/yyyy");
        this.txtFechaPagoOct.setText("dd/mm/yyyy");
        this.txtFechaPagoSet.setText("dd/mm/yyyy");

        this.txtMontoEne.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoFeb.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoMar.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoAbr.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoMay.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoJun.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoJul.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoAgo.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoSet.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoOct.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoNov.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMontoDic.setBackground(new java.awt.Color(153, 255, 153));

        this.txtFechaPagoAbr.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoAgo.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoDic.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoEne.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoFeb.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoJul.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoJun.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoMar.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoMay.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoNov.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoOct.setBackground(new java.awt.Color(153, 255, 153));
        this.txtFechaPagoSet.setBackground(new java.awt.Color(153, 255, 153));

        this.txtDeuda.setText("0.00");
        this.txtTotal.setText("0.00");
        this.txtMesesSinPago.setText("S/. 0 de 0 Meses");

        this.txtDeuda.setBackground(new java.awt.Color(153, 255, 153));
        this.txtTotal.setBackground(new java.awt.Color(153, 255, 153));
        this.txtMesesSinPago.setBackground(new java.awt.Color(153, 255, 153));

        objC = null;
        this.estado = "Si";
        this.objV = null;
        this.objTV = null;
    }

    private void cargarCombox(int op) {
        this.comboTarifa.removeAllItems();
        TipoVivienda objTV = new TipoVivienda();
        objTV.setDescripcion("--SELECCIONE--");
        this.comboTarifa.addItem(objTV);

        try {
            if (op == 1) {
                TipoViviendaBo.obtenerComboResidencial(this.comboTarifa);
            } else {
                TipoViviendaBo.obtenerComboComercial(this.comboTarifa);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void activarControles(boolean estado) {
        txtContribuyente.setEnabled(estado);
        this.txtDomicilo.setEnabled(estado);
        this.txtNroDomicilio.setEnabled(estado);
        this.btnResidencial.setEnabled(estado);
        this.btnComercial.setEnabled(estado);
        this.comboTarifa.setEnabled(estado);
        this.txtAgua.setEnabled(estado);
        this.txtBP.setEnabled(estado);
        this.txtMontoEne.setEnabled(estado);
        this.txtMontoFeb.setEnabled(estado);
        this.txtMontoMar.setEnabled(estado);
        this.txtMontoAbr.setEnabled(estado);
        this.txtMontoMay.setEnabled(estado);
        this.txtMontoJun.setEnabled(estado);
        this.txtMontoJul.setEnabled(estado);
        this.txtMontoAgo.setEnabled(estado);
        this.txtMontoSet.setEnabled(estado);
        this.txtMontoOct.setEnabled(estado);
        this.txtMontoNov.setEnabled(estado);
        this.txtMontoDic.setEnabled(estado);
        this.txtFechaPagoAbr.setEnabled(estado);
        this.txtFechaPagoAgo.setEnabled(estado);
        this.txtFechaPagoDic.setEnabled(estado);
        this.txtFechaPagoEne.setEnabled(estado);
        this.txtFechaPagoFeb.setEnabled(estado);
        this.txtFechaPagoJul.setEnabled(estado);
        this.txtFechaPagoJun.setEnabled(estado);
        this.txtFechaPagoMar.setEnabled(estado);
        this.txtFechaPagoMay.setEnabled(estado);
        this.txtFechaPagoNov.setEnabled(estado);
        this.txtFechaPagoOct.setEnabled(estado);
        this.txtFechaPagoSet.setEnabled(estado);
        this.txtDeuda.setEnabled(estado);
        this.txtTotal.setEnabled(estado);
        this.txtMesesSinPago.setEnabled(estado);
        this.btnGuardar.setEnabled(estado);
        this.btnLimpiar.setEnabled(estado);
        this.btnCancelar.setEnabled(estado);
        this.btnEstado.setEnabled(estado);
        this.btnBuscar.setEnabled(estado);
        this.btnImprimir.setEnabled(estado);

        this.btnNuevo.setEnabled(!estado);
        this.btnEditar.setEnabled(!estado);
        this.txtBuscar.setEnabled(!estado);
        this.tablaVivienda.setEnabled(!estado);
        this.btnEliminar.setEnabled(!estado);
        this.btnRazSocial.setEnabled(!estado);
        this.btnPerNatu.setEnabled(!estado);

        if (estado) {
            tablaVivienda.setBackground(new java.awt.Color(255, 102, 102));
        } else {
            tablaVivienda.setBackground(new java.awt.Color(255, 255, 255));
        }
    }

    private void obtenerDatosCombo() {
        if (this.comboTarifa.getItemAt(this.comboTarifa.getSelectedIndex()) != null) {
            this.objTV = this.comboTarifa.getItemAt(this.comboTarifa.getSelectedIndex());
        }
    }

    private void cargarTabla() {
        ArrayList<Vivienda> ltsVivienda = new ArrayList();
        try {
            if (this.btnPerNatu.isSelected()) {
                ltsVivienda = ViviendaBo.obtenerListaContribuyente();
            } else {
                ltsVivienda = ViviendaBo.obtenerListaContribuyenteRazonSocial();
            }
            MTV.setListado_Vivienda(ltsVivienda);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void definir_tama√±o_columna() {
        TableColumnModel columnModel = this.tablaVivienda.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(300);
        columnModel.getColumn(1).setPreferredWidth(300);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);

        this.tablaVivienda.getTableHeader().setFont(new Font("Tahoma", 1, 12));
        ((DefaultTableCellRenderer) this.tablaVivienda.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void abrirBuscador() {
        frmBuscarContribuyente frmBuscar = new frmBuscarContribuyente(1);
        frmPrincipalAgua.PanelPrincipal.add(frmBuscar);
        frmBuscar.setVisible(true);
        Dimension desktopSize = frmPrincipalAgua.PanelPrincipal.getSize();
        Dimension FrameSize = frmBuscar.getSize();
        frmBuscar.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        try {
            this.setIcon(true);
            this.setVisible(false);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmVivienda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void eliminar() {
        if (this.tablaVivienda.getSelectedRow() != -1) {
            int fila = this.tablaVivienda.getSelectedRow();
            Vivienda objviv = MTV.getVivienda(fila);
            if (objviv.getEstado().equals("Si")) {
                int confirm = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro que desea eliminar la Vivienda con direcci√≥n \n"
                        + objviv.toString() + " ?", "ELIMINAR VIVIENDA", JOptionPane.YES_NO_OPTION);
                if (confirm == 0) {
                    try {
                        if (ViviendaBo.eliminarVivienda(objviv)) {
                            this.cargarTabla();
                            this.limpiar();
                            this.activarControles(false);
                        } else {
                            JOptionPane.showMessageDialog(this, "No se pudo Eliminar", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "La Vivienda selecionado ya se encuentra Inactiva.", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla.", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean general() {
        if (this.txtDomicilo.getText().trim().equals("") || this.txtNroDomicilio.getText().trim().equals("")
                || this.comboTarifa.getSelectedIndex() == 0 || txtContribuyente.getText().trim().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    private void guardar() {
        if (this.general()) {
            this.obtenerDatosCombo();
            Vivienda objViv = new Vivienda(0, this.txtDomicilo.getText(), this.txtNroDomicilio.getText(), this.objTV, objC, this.estado, Double.parseDouble(this.txtAgua.getText().trim()));
            try {
                if (this.objV == null) {
                    if (ViviendaBo.buscarContribuyenteDomicilio(objViv.getObjCont().getIdContribuyente(), objViv.getDireccion(), objViv.getNroVivienda())) {
                        if (ViviendaBo.buscarDomicilio(objViv.getDireccion(), objViv.getNroVivienda())) {
                            if (ViviendaBo.grabarVivienda(objViv)) {
                                JOptionPane.showMessageDialog(this, "Se Registr√≥ Correctamente", "MENSAJE --> VIVIENDA", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(this, "No se pudo Registrar", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
                            }
                            this.limpiar();
                            this.activarControles(false);
                            this.cargarTabla();
                        } else {
                            JOptionPane.showMessageDialog(this, "La vivienda Ingresa ya se encuentra registrada.", "MENSAJE --> VIVIENDA", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "La direcci√≥n ingresada ya se encuentra asociada a un Contribuyente, \n"
                                + "se recomienda verificar la direcci√≥n o seleccionar otro contribuyente. \n"
                                + "O sino modifique el propietario de la vivienda en la interfaz correspondiente.", "MENSAJE --> VIVIENDA", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    boolean existeDireccion = true;
                    objViv.setIdVivienda(this.objV.getIdVivienda());
                    if (!objViv.getDireccion().equals(this.objV.getDireccion()) && !objViv.getNroVivienda().equals(this.objV.getNroVivienda())) {
                        existeDireccion = ViviendaBo.buscarDomicilio(objViv.getDireccion(), objViv.getNroVivienda());
                    }

                    if (existeDireccion) {
                        if (ViviendaBo.modificarVivienda(objViv)) {
                            JOptionPane.showMessageDialog(this, "Se Modific√≥ Correctamente", "MENSAJE --> VIVIENDA", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "No se pudo Modificar", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
                        }
                        this.limpiar();
                        this.activarControles(false);
                        this.cargarTabla();
                    } else {
                        JOptionPane.showMessageDialog(this, "La vivienda Ingresa ya se encuentra registrada.", "MENSAJE --> VIVIENDA", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Verifique que todos los campos hallan sido llenados.", "MENSAJE --> VIVIENDA", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void buttonEditar() {
        this.txtBuscar.setText("");
        int fila = this.tablaVivienda.getSelectedRow();
        if (fila != -1) {
            this.objV = MTV.getVivienda(fila);
            this.activarControles(true);
            this.btnLimpiar.setEnabled(false);
            txtContribuyente.setEnabled(false);
            this.btnBuscar.setEnabled(false);
            this.cargarDatos(objV);
            this.cargarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla.", "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarDatos(Vivienda objV) {
        txtContribuyente.setText(objV.getObjCont().toString());
        this.txtDomicilo.setText(objV.getDireccion());
        this.txtNroDomicilio.setText(objV.getNroVivienda());
        this.cargarCombox(objV.getObjTipViv().getTipo());
        this.txtAgua.setText(String.valueOf(objV.getObjTipViv().getImpAgua()));
        this.txtBP.setText(String.valueOf(objV.getObjTipViv().getImpBP()));
        this.comboTarifa.getModel().setSelectedItem(objV.getObjTipViv());
        this.txtAgua.setText(String.valueOf(objV.getImpAgua()));

        if (objV.getObjTipViv().getTipo() == 1) {
            this.btnResidencial.setSelected(true);
        } else {
            this.btnComercial.setSelected(true);
        }

        if (objV.getEstado().equals("Si")) {
            this.btnEstado.setSelected(true);
            ImageIcon icono = new ImageIcon("src/Imagenes/seleccion.png");
            this.btnEstado.setIcon(icono);
            this.btnEstado.setText("ACTIVO");
            this.estado = "Si";
        } else {
            this.btnEstado.setSelected(false);
            ImageIcon icono = new ImageIcon("src/Imagenes/no-seleccion.png");
            this.btnEstado.setIcon(icono);
            this.btnEstado.setText("INACTIVO");
            this.estado = "No";
        }

        objC = objV.getObjCont();
        this.objTV = objV.getObjTipViv();

        this.cargarCuentaCorriente(objV.getIdVivienda());
    }

    private void cargarCuentaCorriente(int idVivienda) {
        ArrayList<ReciboSaniamiento> ltsReciboSaniamiento = new ArrayList();
        double deudaAnteriror = 0, deudaTotal = 0;
        int mesesImpagos = 0;

        try {
            ltsReciboSaniamiento = ReciboSaniamientoBo.obtenerListaRecibo(idVivienda);
            deudaAnteriror = ReciboSaniamientoBo.obtenerDeudaAnterior(idVivienda);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        if (!ltsReciboSaniamiento.isEmpty()) {
            for (ReciboSaniamiento objRS : ltsReciboSaniamiento) {
                this.verMesesCargados(objRS);
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    deudaTotal += objRS.getImpAgua();
                    mesesImpagos += 1;
                }
            }
            this.txtMesesSinPago.setText("S/. " + deudaTotal + " de " + mesesImpagos + " Meses");
        } else {
            JOptionPane.showMessageDialog(this, "A√∫n no se ha generado ning√∫n recibo para la vivienda con direcci√≥n \n"
                    + this.objV.toString(), "MENSAJE --> VIVIENDA", JOptionPane.ERROR_MESSAGE);
            this.txtMesesSinPago.setText("S/. 0 de 0 Meses");
        }

        deudaTotal += deudaAnteriror;
        this.txtDeuda.setText(String.valueOf(deudaAnteriror));
        this.txtTotal.setText(String.valueOf(deudaTotal));
    }

    private void verMesesCargados(ReciboSaniamiento objRS) {
        switch (objRS.getMes().trim()) {
            case "ENERO":
                this.txtMontoEne.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoEne.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoEne.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoEne.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "FEBRERO":
                this.txtMontoFeb.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoFeb.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoFeb.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoFeb.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "MARZO":
                this.txtMontoMar.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoMar.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoMar.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoMar.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "ABRIL":
                this.txtMontoAbr.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoAbr.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoAbr.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoAbr.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "MAYO":
                this.txtMontoMay.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoMay.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoMay.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoMay.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "JUNIO":
                this.txtMontoJun.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoJun.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoJun.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoJun.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "JULIO":
                this.txtMontoJul.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoJul.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoJul.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoJul.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "AGOSTO":
                this.txtMontoAgo.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoAgo.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoAgo.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoAgo.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "SETIEMBRE":
                this.txtMontoSet.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoSet.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoSet.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoSet.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "OCTUBRE":
                this.txtMontoOct.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoOct.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoOct.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoOct.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "NOVIEMBRE":
                this.txtMontoNov.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoNov.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoNov.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoNov.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
            case "DICIEMBRE":
                this.txtMontoDic.setText(String.valueOf(objRS.getImpAgua()));
                if (objRS.getEstadoPago().trim().equals("No Pago")) {
                    this.txtMontoDic.setBackground(new java.awt.Color(255, 153, 153));
                    this.txtFechaPagoDic.setBackground(new java.awt.Color(255, 153, 153));
                } else {
                    this.txtFechaPagoDic.setText(this.convertDate(objRS.getFechaPagoCaja()));
                }
                break;
        }
    }

    private void buscar() {
        String buscar = this.txtBuscar.getText().trim();
        ArrayList<Vivienda> ltsVivienda = new ArrayList();
        try {
            if (this.btnPerNatu.isSelected()) {
                ltsVivienda = ViviendaBo.buscarDNIContribuyente(buscar);
                if (ltsVivienda.isEmpty()) {
                    ltsVivienda = ViviendaBo.buscarNombreContribuyente(buscar);
                }
                if (ltsVivienda.isEmpty()) {
                    ltsVivienda = ViviendaBo.buscarApellidoContribuyente(buscar);
                }
                if (ltsVivienda.isEmpty()) {
                    ltsVivienda = ViviendaBo.buscarDireccionContribuyente(buscar);
                }
            } else {
                ltsVivienda = ViviendaBo.buscarRazonSocialContribuyente(buscar);
                if (ltsVivienda.isEmpty()) {
                    ltsVivienda = ViviendaBo.buscarDNIContribuyenteRazonSocial(buscar);
                }
                if (ltsVivienda.isEmpty()) {
                    ltsVivienda = ViviendaBo.buscarDireccionRazonSocialContribuyente(buscar);
                }
            }
            MTV.setListado_Vivienda(ltsVivienda);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private String convertDate(String dateStr) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate date = LocalDate.parse(dateStr, formatter);
        return date.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
    }
}
