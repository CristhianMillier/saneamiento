package Vista;

import Datos.Contribuyente;
import Datos.Modelo_Tabla_Contribuyente;
import Negocio.ContribuyenteBo;
import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;

public class frmBuscarContribuyente extends javax.swing.JInternalFrame {

    private Modelo_Tabla_Contribuyente MTC = new Modelo_Tabla_Contribuyente();
    private int opcion = 0;

    /**
     * Creates new form frmBuscarContribuyente
     */
    public frmBuscarContribuyente(int opcion) {
        initComponents();
        this.cargarTabla();
        this.definir_tamaño_columna();
        this.botonos();
        this.opcion = opcion;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaContribuyente = new javax.swing.JTable();
        btnPerNatu = new javax.swing.JRadioButton();
        btnRazSocial = new javax.swing.JRadioButton();
        btnSalir = new javax.swing.JButton();

        setTitle("BUSCAR CONTRIBUYENTE");

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONTRIBUYENTES REGISTRADOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reclutamiento.png"))); // NOI18N
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        tablaContribuyente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablaContribuyente.setModel(this.MTC);
        tablaContribuyente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaContribuyente.getTableHeader().setResizingAllowed(false);
        tablaContribuyente.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaContribuyente);

        btnPerNatu.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(btnPerNatu);
        btnPerNatu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPerNatu.setForeground(new java.awt.Color(255, 255, 255));
        btnPerNatu.setSelected(true);
        btnPerNatu.setText("PERSONA NATUAL");
        btnPerNatu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPerNatu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerNatuActionPerformed(evt);
            }
        });

        btnRazSocial.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(btnRazSocial);
        btnRazSocial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRazSocial.setForeground(new java.awt.Color(255, 255, 255));
        btnRazSocial.setText("RAZON SOCIAL");
        btnRazSocial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRazSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRazSocialActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salida.png"))); // NOI18N
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPerNatu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRazSocial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnPerNatu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRazSocial))
                            .addComponent(btnSalir))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        this.txtBuscar.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                char c = evt.getKeyChar();
                if (Character.isLowerCase(c)) {
                    evt.setKeyChar(Character.toUpperCase(c));
                }
            }
        });
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        this.buscar();
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        if (this.txtBuscar.getText().trim().length() >= 50) {
            getToolkit().beep(); //sonido de alerta
            evt.consume();
        }
        txtBuscar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                String texto = txtBuscar.getText() + e.getKeyChar();
                if (texto.matches(".*(.)\\1{2,}.*")) {
                    e.consume(); // Ignora la tecla si tiene más de 2 caracteres iguales seguidos
                }
            }
        });
        char c = evt.getKeyChar();
        if (c == ',' || c == '.' || c == '-') {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnPerNatuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerNatuActionPerformed
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnPerNatuActionPerformed

    private void btnRazSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRazSocialActionPerformed
        this.cargarTabla();
        this.txtBuscar.setText("");
    }//GEN-LAST:event_btnRazSocialActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.seleccionar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.salir();
    }//GEN-LAST:event_btnSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JRadioButton btnPerNatu;
    private javax.swing.JRadioButton btnRazSocial;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaContribuyente;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        ArrayList<Contribuyente> ltsContribuyente = new ArrayList();
        try {
            if (this.btnPerNatu.isSelected()) {
                ltsContribuyente = ContribuyenteBo.obtenerListaContribuyente();
            } else {
                ltsContribuyente = ContribuyenteBo.obtenerListaContribuyenteRazonSocial();
            }
            for (int i = 0; i < ltsContribuyente.size(); i++) {
                if (ltsContribuyente.get(i).getEstado().equals("No")) {
                    ltsContribuyente.remove(i);
                }
            }
            MTC.setListado_Contribuyente(ltsContribuyente);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void definir_tamaño_columna() {
        TableColumnModel columnModel = this.tablaContribuyente.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(300);
        columnModel.getColumn(1).setPreferredWidth(120);
        columnModel.getColumn(2).setPreferredWidth(120);
        columnModel.getColumn(3).setPreferredWidth(300);
        columnModel.getColumn(4).setPreferredWidth(120);

        this.tablaContribuyente.getTableHeader().setFont(new Font("Tahoma", 1, 12));
        ((DefaultTableCellRenderer) this.tablaContribuyente.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }

    private void botonos() {
        this.btnSalir.setOpaque(false);
        this.btnSalir.setContentAreaFilled(false);
        this.btnSalir.setBorderPainted(false);
        this.btnSalir.setToolTipText("Salir");

        this.btnEditar.setOpaque(false);
        this.btnEditar.setContentAreaFilled(false);
        this.btnEditar.setBorderPainted(false);
        this.btnEditar.setToolTipText("Seleccionar Contribuyente");
    }

    private void buscar() {
        String buscar = this.txtBuscar.getText().trim();
        ArrayList<Contribuyente> ltsContribuyente = new ArrayList();
        try {
            if (this.btnPerNatu.isSelected()) {
                ltsContribuyente = ContribuyenteBo.buscarDNIContribuyente(buscar);
                if (ltsContribuyente.isEmpty()) {
                    ltsContribuyente = ContribuyenteBo.buscarNombreContribuyente(buscar);
                }
                if (ltsContribuyente.isEmpty()) {
                    ltsContribuyente = ContribuyenteBo.buscarApellidoContribuyente(buscar);
                }
                if (ltsContribuyente.isEmpty()) {
                    ltsContribuyente = ContribuyenteBo.buscarPersonaContribuyenteDireccion(buscar);
                }
            } else {
                ltsContribuyente = ContribuyenteBo.buscarRazonSocialContribuyente(buscar);
                if (ltsContribuyente.isEmpty()) {
                    ltsContribuyente = ContribuyenteBo.buscarDNIContribuyenteRazonSocial(buscar);
                }
                if (ltsContribuyente.isEmpty()) {
                    ltsContribuyente = ContribuyenteBo.buscarRazonSocialContribuyenteDireccion(buscar);
                }
            }
            for (int i = 0; i < ltsContribuyente.size(); i++) {
                if (ltsContribuyente.get(i).getEstado().equals("No")) {
                    ltsContribuyente.remove(i);
                }
            }
            MTC.setListado_Contribuyente(ltsContribuyente);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void seleccionar() {
        this.txtBuscar.setText("");
        int fila = this.tablaContribuyente.getSelectedRow();
        if (fila != -1) {
            if (opcion == 1) {
                frmVivienda.objC = MTC.getContribuyente(fila);
                frmVivienda.txtContribuyente.setText(MTC.getContribuyente(fila).toString());
                frmVivienda.txtContribuyente.requestFocus();
                frmVivienda.txtDomicilo.setText(eliminarNumero(MTC.getContribuyente(fila).getDomicilio()).trim());
            }
            if (opcion == 2) {
                frmModfProp.objCon = MTC.getContribuyente(fila);
                frmModfProp.txtActContri.setText(MTC.getContribuyente(fila).toString());
                frmModfProp.txtActContri.requestFocus();
            }
            this.dispose();

            JInternalFrame[] frames = frmPrincipalAgua.PanelPrincipal.getAllFrames();
            for (JInternalFrame frame : frames) {
                if (frame.isIcon()) {
                    try {
                        frame.setIcon(false);
                        frame.setSelected(true);
                        frame.setVisible(true);
                        frmPrincipalAgua.PanelPrincipal.getDesktopManager().deiconifyFrame(frame);
                    } catch (PropertyVetoException e) {
                        e.printStackTrace();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usted no a seleccionado un campo en la tabla.", "MENSAJE --> CONTRIBUYENTE", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void salir() {
        this.dispose();
        JInternalFrame[] frames = frmPrincipalAgua.PanelPrincipal.getAllFrames();
        for (JInternalFrame frame : frames) {
            if (frame.isIcon()) {
                try {
                    frame.setIcon(false);
                    frame.setSelected(true);
                    frame.setVisible(true);
                    frmPrincipalAgua.PanelPrincipal.getDesktopManager().deiconifyFrame(frame);
                } catch (PropertyVetoException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    private String eliminarNumero(String texto) {
        texto = texto.replaceAll("[0-9]|S/N", "");
        return texto;
    }
}
