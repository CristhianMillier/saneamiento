package Vista;

import Datos.Personal;
import Datos.Vivienda;
import Negocio.MorososBo;
import Negocio.ReciboSaniamientoBo;
import Report.ContribuyenteReport;
import Report.MorososGeneralReport;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class frmPrincipalAgua extends javax.swing.JFrame {

    private Personal objP = null;
    private frmComerciales comercial = null;
    private frmResidenciales residencial = null;
    private frmPersonal personal = null;
    private frmContribuyente contribuyente = null;
    private frmVivienda vivienda = null;
    private frmMorosos moroso = null;
    private frmImprimirRec recibo = null;
    private frmModfProp modificacionContr = null;
    private frmCaja caja = null;
    private frmReportMensualSan mensualSan = null;
    private frmReportEstadistico reporteEstadistico = null;

    /**
     * Creates new form frmPrincipalAgua
     */
    public frmPrincipalAgua() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        setLocationRelativeTo(null);
        setIconImage(getIconImage());
        this.generarRecibo();
        this.mensajeAlerta();
    }

    @Override
    public Image getIconImage() {
        Image image = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/logo.png"));
        return image;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/Imagenes/fondoPantalla.png"));
        Image imagen = icon.getImage();
        PanelPrincipal = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            }
        };
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu123 = new javax.swing.JMenu();
        menuContribuyente = new javax.swing.JMenuItem();
        menuResidencial = new javax.swing.JMenuItem();
        menuComercial = new javax.swing.JMenuItem();
        menuPersonal = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuCaja = new javax.swing.JMenuItem();
        menuMorosos = new javax.swing.JMenuItem();
        menuRecibos = new javax.swing.JMenuItem();
        menuVivienda = new javax.swing.JMenuItem();
        menuPropietario = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MUNICIPALIDAD DISTRITAL DE COPALLIN");

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1041, Short.MAX_VALUE)
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 697, Short.MAX_VALUE)
        );

        jMenu123.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/configuraciones.png"))); // NOI18N
        jMenu123.setText("MAESTRO");
        jMenu123.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu123.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        menuContribuyente.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuContribuyente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/personas.png"))); // NOI18N
        menuContribuyente.setText("Contribuyente");
        menuContribuyente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuContribuyente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuContribuyenteActionPerformed(evt);
            }
        });
        jMenu123.add(menuContribuyente);

        menuResidencial.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuResidencial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pueblo.png"))); // NOI18N
        menuResidencial.setText("Residenciales");
        menuResidencial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuResidencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuResidencialActionPerformed(evt);
            }
        });
        jMenu123.add(menuResidencial);

        menuComercial.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuComercial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/centro-comercial.png"))); // NOI18N
        menuComercial.setText("Comerciales");
        menuComercial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuComercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuComercialActionPerformed(evt);
            }
        });
        jMenu123.add(menuComercial);

        menuPersonal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuPersonal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trabajo-en-equipo.png"))); // NOI18N
        menuPersonal.setText("Personal");
        menuPersonal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPersonalActionPerformed(evt);
            }
        });
        jMenu123.add(menuPersonal);
        jMenu123.add(jSeparator1);

        menuSalir.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salida.png"))); // NOI18N
        menuSalir.setText("Salir");
        menuSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        jMenu123.add(menuSalir);

        jMenuBar1.add(jMenu123);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/planificacion.png"))); // NOI18N
        jMenu2.setText("PROCESOS");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        menuCaja.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuCaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cajero-automatico.png"))); // NOI18N
        menuCaja.setText("Caja");
        menuCaja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCajaActionPerformed(evt);
            }
        });
        jMenu2.add(menuCaja);

        menuMorosos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuMorosos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/deudor.png"))); // NOI18N
        menuMorosos.setText("Impresión de Morosos");
        menuMorosos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuMorosos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMorososActionPerformed(evt);
            }
        });
        jMenu2.add(menuMorosos);

        menuRecibos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuRecibos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/recibo.png"))); // NOI18N
        menuRecibos.setText("Impresión de Recibos");
        menuRecibos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuRecibos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRecibosActionPerformed(evt);
            }
        });
        jMenu2.add(menuRecibos);

        menuVivienda.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuVivienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/casa.png"))); // NOI18N
        menuVivienda.setText("Vivienda");
        menuVivienda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuVivienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViviendaActionPerformed(evt);
            }
        });
        jMenu2.add(menuVivienda);

        menuPropietario.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        menuPropietario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contacto.png"))); // NOI18N
        menuPropietario.setText("Editar Propietario");
        menuPropietario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPropietarioActionPerformed(evt);
            }
        });
        jMenu2.add(menuPropietario);

        jMenuBar1.add(jMenu2);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/diverso.png"))); // NOI18N
        jMenu1.setText("REPORTES");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inmigracion.png"))); // NOI18N
        jMenuItem2.setText("Contribuyente");
        jMenuItem2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mercado.png"))); // NOI18N
        jMenu3.setText("Ingresos");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reporte-de-negocios.png"))); // NOI18N
        jMenuItem1.setText("Mensuales");
        jMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/analisis.png"))); // NOI18N
        jMenuItem3.setText("Estadíticos");
        jMenuItem3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenu1.add(jMenu3);

        jMenuItem4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reporteMoroso.png"))); // NOI18N
        jMenuItem4.setText("Morosos");
        jMenuItem4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuMorososActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMorososActionPerformed
        this.bloquearInterfazMorosos();
    }//GEN-LAST:event_menuMorososActionPerformed

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        frmLogin login = new frmLogin();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuComercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuComercialActionPerformed
        if (comercial != null) {
            comercial.dispose();
        }
        comercial = new frmComerciales();
        PanelPrincipal.add(comercial);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = comercial.getSize();
        comercial.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        comercial.setVisible(true);
    }//GEN-LAST:event_menuComercialActionPerformed

    private void menuResidencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuResidencialActionPerformed
        if (residencial != null) {
            residencial.dispose();
        }
        residencial = new frmResidenciales();
        PanelPrincipal.add(residencial);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = residencial.getSize();
        residencial.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        residencial.setVisible(true);
    }//GEN-LAST:event_menuResidencialActionPerformed

    private void menuPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPersonalActionPerformed
        if (personal != null) {
            personal.dispose();
        }
        personal = new frmPersonal();
        PanelPrincipal.add(personal);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = personal.getSize();
        personal.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        personal.setVisible(true);
        personal.setId(this.objP.getIdEmpleado());
    }//GEN-LAST:event_menuPersonalActionPerformed

    private void menuContribuyenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuContribuyenteActionPerformed
        if (contribuyente != null) {
            contribuyente.dispose();
        }
        contribuyente = new frmContribuyente();
        PanelPrincipal.add(contribuyente);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = contribuyente.getSize();
        contribuyente.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        contribuyente.setVisible(true);
    }//GEN-LAST:event_menuContribuyenteActionPerformed

    private void menuViviendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViviendaActionPerformed
        if (vivienda != null) {
            vivienda.dispose();
        }
        vivienda = new frmVivienda();
        PanelPrincipal.add(vivienda);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = vivienda.getSize();
        vivienda.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        vivienda.setVisible(true);
    }//GEN-LAST:event_menuViviendaActionPerformed

    private void menuRecibosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRecibosActionPerformed
        this.bloquearInterfaz();
    }//GEN-LAST:event_menuRecibosActionPerformed

    private void menuPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPropietarioActionPerformed
        if (modificacionContr != null) {
            modificacionContr.dispose();
        }
        modificacionContr = new frmModfProp();
        PanelPrincipal.add(modificacionContr);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = modificacionContr.getSize();
        modificacionContr.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        modificacionContr.setVisible(true);
    }//GEN-LAST:event_menuPropietarioActionPerformed

    private void menuCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCajaActionPerformed
        if (caja != null) {
            caja.dispose();
        }
        caja = new frmCaja();
        PanelPrincipal.add(caja);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = caja.getSize();
        caja.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        caja.setVisible(true);
    }//GEN-LAST:event_menuCajaActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            ContribuyenteReport reporte = new ContribuyenteReport();
            reporte.verReporte();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (mensualSan != null) {
            mensualSan.dispose();
        }
        mensualSan = new frmReportMensualSan();
        PanelPrincipal.add(mensualSan);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = mensualSan.getSize();
        mensualSan.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        mensualSan.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            MorososGeneralReport reporte = new MorososGeneralReport();
            reporte.verReporte();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (reporteEstadistico != null) {
            reporteEstadistico.dispose();
        }
        reporteEstadistico = new frmReportEstadistico();
        PanelPrincipal.add(reporteEstadistico);
        Dimension desktopSize = PanelPrincipal.getSize();
        Dimension FrameSize = reporteEstadistico.getSize();
        reporteEstadistico.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        reporteEstadistico.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipalAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipalAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipalAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipalAgua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipalAgua().setVisible(true);
            }
        });
    }

    public void setObjP(Personal objP) {
        this.objP = objP;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane PanelPrincipal;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu123;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem menuCaja;
    private javax.swing.JMenuItem menuComercial;
    private javax.swing.JMenuItem menuContribuyente;
    private javax.swing.JMenuItem menuMorosos;
    private javax.swing.JMenuItem menuPersonal;
    private javax.swing.JMenuItem menuPropietario;
    private javax.swing.JMenuItem menuRecibos;
    private javax.swing.JMenuItem menuResidencial;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JMenuItem menuVivienda;
    // End of variables declaration//GEN-END:variables

    private void bloquearInterfaz() {
        LocalDateTime fechaHoraActual = LocalDateTime.now();
        int dia = fechaHoraActual.getDayOfMonth();
        int hora = fechaHoraActual.getHour();

        if (dia == 15) {
            if (hora >= 13) {
                if (recibo != null) {
                    recibo.dispose();
                }
                recibo = new frmImprimirRec();
                PanelPrincipal.add(recibo);
                Dimension desktopSize = PanelPrincipal.getSize();
                Dimension FrameSize = recibo.getSize();
                recibo.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
                recibo.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Aún no se pueden imprimir los recibos porque \n"
                        + "el sistema aún se encuentra generando los recibos actualizados. \n"
                        + "Se recomiendo ingresas al sistema a las 2 pm para imprimir los recibos.", "MENSAJE --> RECIBOS", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (recibo != null) {
                recibo.dispose();
            }
            recibo = new frmImprimirRec();
            PanelPrincipal.add(recibo);
            Dimension desktopSize = PanelPrincipal.getSize();
            Dimension FrameSize = recibo.getSize();
            recibo.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
            recibo.setVisible(true);
        }
    }

    private void bloquearInterfazMorosos() {
        LocalDateTime fechaHoraActual = LocalDateTime.now();
        int dia = fechaHoraActual.getDayOfMonth();
        int hora = fechaHoraActual.getHour();

        if (dia == 15) {
            if (hora >= 13) {
                if (moroso != null) {
                    moroso.dispose();
                }
                moroso = new frmMorosos();
                PanelPrincipal.add(moroso);
                Dimension desktopSize = PanelPrincipal.getSize();
                Dimension FrameSize = moroso.getSize();
                moroso.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
                moroso.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Aún no se pueden imprimir los recibos porque \n"
                        + "el sistema aún se encuentra generando los recibos actualizados. \n"
                        + "Se recomiendo ingresas al sistema a las 2 pm para imprimir los recibos.", "MENSAJE --> RECIBOS", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (moroso != null) {
                moroso.dispose();
            }
            moroso = new frmMorosos();
            PanelPrincipal.add(moroso);
            Dimension desktopSize = PanelPrincipal.getSize();
            Dimension FrameSize = moroso.getSize();
            moroso.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
            moroso.setVisible(true);
        }
    }

    private void generarRecibo() {
        LocalDateTime fechaHoraActual = LocalDateTime.now();
        int dia = fechaHoraActual.getDayOfMonth();
        if (dia >= 15) {
            try {
                if (ReciboSaniamientoBo.buscarRecibosGenerados()) {
                    frmCargando cargar = new frmCargando();
                    cargar.setVisible(true);
                    frmPrincipalAgua.PanelPrincipal.add(cargar);
                    Dimension desktopSize = frmPrincipalAgua.PanelPrincipal.getSize();
                    Dimension FrameSize = cargar.getSize();
                    cargar.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);

                    ReciboSaniamientoBo.generarRecibos();
                    MorososBo.generarMororos();

                    cargar.dispose();
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }

    private void mensajeAlerta() {
        ArrayList<Vivienda> ltsVivienda = new ArrayList();
        try {
            ltsVivienda = ReciboSaniamientoBo.mostrarCorte();
            if (!ltsVivienda.isEmpty()) {
                frmMensajeAlerta frmAlerta = new frmMensajeAlerta(ltsVivienda);
                PanelPrincipal.add(frmAlerta);
                Dimension desktopSize = PanelPrincipal.getSize();
                Dimension FrameSize = frmAlerta.getSize();
                frmAlerta.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
                frmAlerta.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
